---------> x 축 (x=2)
| (o, 0) (1, 0)
|
|
y축(y=2)        (2, 2)

왼쪽 상단의 4개를 뜯어와서 행렬을 만들 때 -- Clip 연산
(0, 0) (1, 0)
(0, 1) (1, 1)

# 03 28 목
테트리스 배경을 뜯어내는 이유: 배경에 이미 블록이 있을 때 덮어쓰지 않고
배경 + 블록(합집합 연산) 하기 위해

배경 == iScreen (input Screen)

# 04 04 목
복사 생성자
Matrix(Matrix obj) <--- Matrix B(A)  느림, 형식인자 실질인자  복사를 두번 해서
Matrix(Matrix *obj) (value) <------ Matrix B(&A)  (B를 생성 후 실질 인자로 A의 주소값을 전달)
Matrix(Matrix &obj) (reference)  <---- Matrix B(A) (인자의 복사 작업이 없음)
아래 두 표현은 실질적으로 같은 기능

week5 포인터들의 배열 vs 2차원 배열의 포인터
int* *array (int **array)
: int* 타입을 원소로 갖는 포인터

int (*array) [3]
: int[3](원소가 3개인 1차원 배열) 을 원소로 갖는 포인터

